
AVRASM ver. 2.1.30  C:\Users\zenwi\OneDrive\Documents\cvavr\LSP 1\Debug\List\KEYPAD.asm Mon May 17 23:00:01 2021

C:\Users\zenwi\OneDrive\Documents\cvavr\LSP 1\Debug\List\KEYPAD.asm(1093): warning: Register r5 already defined by the .DEF directive
C:\Users\zenwi\OneDrive\Documents\cvavr\LSP 1\Debug\List\KEYPAD.asm(1094): warning: Register r4 already defined by the .DEF directive
C:\Users\zenwi\OneDrive\Documents\cvavr\LSP 1\Debug\List\KEYPAD.asm(1095): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.37 Evaluation
                 ;(C) Copyright 1998-2019 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8535
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 128 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8535
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 512
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x025F
                 	.EQU __DSTACK_SIZE=0x0080
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c031      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
000013 cfec      	RJMP 0x00
000014 cfeb      	RJMP 0x00
                 
                 _tbl10_G101:
000015 2710
000016 03e8
000017 0064
000018 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000019 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00001a 1000
00001b 0100
00001c 0010
00001d 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00001e 0037
00001f 0038
000020 0039
000021 002f      	.DB  0x37,0x0,0x38,0x0,0x39,0x0,0x2F,0x0
000022 0034
000023 0035
000024 0036
000025 0058      	.DB  0x34,0x0,0x35,0x0,0x36,0x0,0x58,0x0
000026 0031
000027 0032
000028 0033
000029 002d      	.DB  0x31,0x0,0x32,0x0,0x33,0x0,0x2D,0x0
00002a 0030
00002b 003d
00002c 002b      	.DB  0x30,0x0,0x3D,0x0,0x2B,0x0
                 _0x2000003:
00002d c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00002e 0002      	.DW  0x02
00002f 00e0      	.DW  __base_y_G100
000030 005a      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000031 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000032 94f8      	CLI
000033 27ee      	CLR  R30
000034 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000035 e0f1      	LDI  R31,1
000036 bffb      	OUT  GICR,R31
000037 bfeb      	OUT  GICR,R30
000038 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000039 e08d      	LDI  R24,(14-2)+1
00003a e0a2      	LDI  R26,2
00003b 27bb      	CLR  R27
                 __CLEAR_REG:
00003c 93ed      	ST   X+,R30
00003d 958a      	DEC  R24
00003e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00003f e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000040 e092      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000041 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000042 93ed      	ST   X+,R30
000043 9701      	SBIW R24,1
000044 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000045 e5ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000046 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000047 9185      	LPM  R24,Z+
000048 9195      	LPM  R25,Z+
000049 9700      	SBIW R24,0
00004a f061      	BREQ __GLOBAL_INI_END
00004b 91a5      	LPM  R26,Z+
00004c 91b5      	LPM  R27,Z+
00004d 9005      	LPM  R0,Z+
00004e 9015      	LPM  R1,Z+
00004f 01bf      	MOVW R22,R30
000050 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000051 9005      	LPM  R0,Z+
000052 920d      	ST   X+,R0
000053 9701      	SBIW R24,1
000054 f7e1      	BRNE __GLOBAL_INI_LOOP
000055 01fb      	MOVW R30,R22
000056 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000057 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000058 bfed      	OUT  SPL,R30
000059 e0e2      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00005a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005b eec0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005c e0d0      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005d c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0xE0
                 
                 	.CSEG
                 ;#include <mega8535.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;
                 ;void main (void)
                 ; 0000 0006  {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0007     DDRC = 0XFF;
00005e efef      	LDI  R30,LOW(255)
00005f bbe4      	OUT  0x14,R30
                 ; 0000 0008     PORTC = 0X00;
000060 e0e0      	LDI  R30,LOW(0)
000061 bbe5      	OUT  0x15,R30
                 ; 0000 0009     DDRB = 0x0F; // PD0-3 as output, PD4-7 as input
000062 e0ef      	LDI  R30,LOW(15)
000063 bbe7      	OUT  0x17,R30
                 ; 0000 000A 
                 ; 0000 000B     lcd_init (16); // Characters / line: 16
000064 e1a0      	LDI  R26,LOW(16)
000065 d0c6      	RCALL _lcd_init
                 ; 0000 000C 
                 ; 0000 000D  while (1) // main program
                 _0x3:
                 ; 0000 000E    {
                 ; 0000 000F     PORTB = 0b11111110;
000066 efee      	LDI  R30,LOW(254)
000067 bbe8      	OUT  0x18,R30
                 ; 0000 0010     if (PINB.4 == 0) {lcd_gotoxy (15,1); lcd_putsf ("7");}
000068 99b4      	SBIC 0x16,4
000069 c004      	RJMP _0x6
00006a d0ec      	RCALL SUBOPT_0x0
                +
00006b e3ac     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
00006c e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
00006d d0af      	RCALL _lcd_putsf
                 ; 0000 0011     if (PINB.5 == 0) {lcd_gotoxy (15,1); lcd_putsf ("8");}
                 _0x6:
00006e 99b5      	SBIC 0x16,5
00006f c004      	RJMP _0x7
000070 d0e6      	RCALL SUBOPT_0x0
                +
000071 e3ae     +LDI R26 , LOW ( 2 * _0x0 + ( 2 ) )
000072 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 2 ) )
                 	__POINTW2FN _0x0,2
000073 d0a9      	RCALL _lcd_putsf
                 ; 0000 0012     if (PINB.6 == 0) {lcd_gotoxy (15,1); lcd_putsf ("9");}
                 _0x7:
000074 99b6      	SBIC 0x16,6
000075 c004      	RJMP _0x8
000076 d0e0      	RCALL SUBOPT_0x0
                +
000077 e4a0     +LDI R26 , LOW ( 2 * _0x0 + ( 4 ) )
000078 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW2FN _0x0,4
000079 d0a3      	RCALL _lcd_putsf
                 ; 0000 0013     if (PINB.7 == 0) {lcd_gotoxy (15,1); lcd_putsf ("/");}
                 _0x8:
00007a 99b7      	SBIC 0x16,7
00007b c004      	RJMP _0x9
00007c d0da      	RCALL SUBOPT_0x0
                +
00007d e4a2     +LDI R26 , LOW ( 2 * _0x0 + ( 6 ) )
00007e e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 6 ) )
                 	__POINTW2FN _0x0,6
00007f d09d      	RCALL _lcd_putsf
                 ; 0000 0014     delay_ms (30);
                 _0x9:
000080 d0da      	RCALL SUBOPT_0x1
                 ; 0000 0015 
                 ; 0000 0016     PORTB = 0b11111101;
000081 efed      	LDI  R30,LOW(253)
000082 bbe8      	OUT  0x18,R30
                 ; 0000 0017     if (PINB.4 == 0) {lcd_gotoxy (15,1); lcd_putsf ("4");}
000083 99b4      	SBIC 0x16,4
000084 c004      	RJMP _0xA
000085 d0d1      	RCALL SUBOPT_0x0
                +
000086 e4a4     +LDI R26 , LOW ( 2 * _0x0 + ( 8 ) )
000087 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 8 ) )
                 	__POINTW2FN _0x0,8
000088 d094      	RCALL _lcd_putsf
                 ; 0000 0018     if (PINB.5 == 0) {lcd_gotoxy (15,1); lcd_putsf ("5");}
                 _0xA:
000089 99b5      	SBIC 0x16,5
00008a c004      	RJMP _0xB
00008b d0cb      	RCALL SUBOPT_0x0
                +
00008c e4a6     +LDI R26 , LOW ( 2 * _0x0 + ( 10 ) )
00008d e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 10 ) )
                 	__POINTW2FN _0x0,10
00008e d08e      	RCALL _lcd_putsf
                 ; 0000 0019     if (PINB.6 == 0) {lcd_gotoxy (15,1); lcd_putsf ("6");}
                 _0xB:
00008f 99b6      	SBIC 0x16,6
000090 c004      	RJMP _0xC
000091 d0c5      	RCALL SUBOPT_0x0
                +
000092 e4a8     +LDI R26 , LOW ( 2 * _0x0 + ( 12 ) )
000093 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW2FN _0x0,12
000094 d088      	RCALL _lcd_putsf
                 ; 0000 001A     if (PINB.7 == 0) {lcd_gotoxy (15,1); lcd_putsf ("X");}
                 _0xC:
000095 99b7      	SBIC 0x16,7
000096 c004      	RJMP _0xD
000097 d0bf      	RCALL SUBOPT_0x0
                +
000098 e4aa     +LDI R26 , LOW ( 2 * _0x0 + ( 14 ) )
000099 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW2FN _0x0,14
00009a d082      	RCALL _lcd_putsf
                 ; 0000 001B     delay_ms (30);
                 _0xD:
00009b d0bf      	RCALL SUBOPT_0x1
                 ; 0000 001C 
                 ; 0000 001D     PORTB = 0b11111011;
00009c efeb      	LDI  R30,LOW(251)
00009d bbe8      	OUT  0x18,R30
                 ; 0000 001E     if (PINB.4 == 0) {lcd_gotoxy (15,1); lcd_putsf ("1");}
00009e 99b4      	SBIC 0x16,4
00009f c004      	RJMP _0xE
0000a0 d0b6      	RCALL SUBOPT_0x0
                +
0000a1 e4ac     +LDI R26 , LOW ( 2 * _0x0 + ( 16 ) )
0000a2 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 16 ) )
                 	__POINTW2FN _0x0,16
0000a3 d079      	RCALL _lcd_putsf
                 ; 0000 001F     if (PINB.5 == 0) {lcd_gotoxy (15,1); lcd_putsf ("2");}
                 _0xE:
0000a4 99b5      	SBIC 0x16,5
0000a5 c004      	RJMP _0xF
0000a6 d0b0      	RCALL SUBOPT_0x0
                +
0000a7 e4ae     +LDI R26 , LOW ( 2 * _0x0 + ( 18 ) )
0000a8 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 18 ) )
                 	__POINTW2FN _0x0,18
0000a9 d073      	RCALL _lcd_putsf
                 ; 0000 0020     if (PINB.6 == 0) {lcd_gotoxy (15,1); lcd_putsf ("3");}
                 _0xF:
0000aa 99b6      	SBIC 0x16,6
0000ab c004      	RJMP _0x10
0000ac d0aa      	RCALL SUBOPT_0x0
                +
0000ad e5a0     +LDI R26 , LOW ( 2 * _0x0 + ( 20 ) )
0000ae e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 20 ) )
                 	__POINTW2FN _0x0,20
0000af d06d      	RCALL _lcd_putsf
                 ; 0000 0021     if (PINB.7 == 0) {lcd_gotoxy (15,1); lcd_putsf ("-");}
                 _0x10:
0000b0 99b7      	SBIC 0x16,7
0000b1 c004      	RJMP _0x11
0000b2 d0a4      	RCALL SUBOPT_0x0
                +
0000b3 e5a2     +LDI R26 , LOW ( 2 * _0x0 + ( 22 ) )
0000b4 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW2FN _0x0,22
0000b5 d067      	RCALL _lcd_putsf
                 ; 0000 0022     delay_ms (30);
                 _0x11:
0000b6 d0a4      	RCALL SUBOPT_0x1
                 ; 0000 0023 
                 ; 0000 0024     PORTB = 0b11110111;
0000b7 efe7      	LDI  R30,LOW(247)
0000b8 bbe8      	OUT  0x18,R30
                 ; 0000 0025     if (PINB.4 == 0) {lcd_gotoxy (15,1); lcd_putsf ("");}
0000b9 99b4      	SBIC 0x16,4
0000ba c004      	RJMP _0x12
0000bb d09b      	RCALL SUBOPT_0x0
                +
0000bc e3ad     +LDI R26 , LOW ( 2 * _0x0 + ( 1 ) )
0000bd e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 1 ) )
                 	__POINTW2FN _0x0,1
0000be d05e      	RCALL _lcd_putsf
                 ; 0000 0026     if (PINB.5 == 0) {lcd_gotoxy (15,1); lcd_putsf ("0");}
                 _0x12:
0000bf 99b5      	SBIC 0x16,5
0000c0 c004      	RJMP _0x13
0000c1 d095      	RCALL SUBOPT_0x0
                +
0000c2 e5a4     +LDI R26 , LOW ( 2 * _0x0 + ( 24 ) )
0000c3 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW2FN _0x0,24
0000c4 d058      	RCALL _lcd_putsf
                 ; 0000 0027     if (PINB.6 == 0) {lcd_gotoxy (15,1); lcd_putsf ("=");}
                 _0x13:
0000c5 99b6      	SBIC 0x16,6
0000c6 c004      	RJMP _0x14
0000c7 d08f      	RCALL SUBOPT_0x0
                +
0000c8 e5a6     +LDI R26 , LOW ( 2 * _0x0 + ( 26 ) )
0000c9 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 26 ) )
                 	__POINTW2FN _0x0,26
0000ca d052      	RCALL _lcd_putsf
                 ; 0000 0028     if (PINB.7 == 0) {lcd_gotoxy (15,1); lcd_putsf ("+");}
                 _0x14:
0000cb 99b7      	SBIC 0x16,7
0000cc c004      	RJMP _0x15
0000cd d089      	RCALL SUBOPT_0x0
                +
0000ce e5a8     +LDI R26 , LOW ( 2 * _0x0 + ( 28 ) )
0000cf e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW2FN _0x0,28
0000d0 d04c      	RCALL _lcd_putsf
                 ; 0000 0029     delay_ms (30);
                 _0x15:
0000d1 d089      	RCALL SUBOPT_0x1
                 ; 0000 002A    }
0000d2 cf93      	RJMP _0x3
                 ; 0000 002B   }
                 _0x16:
0000d3 cfff      	RJMP _0x16
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000d4 931a      	ST   -Y,R17
0000d5 2f1a      	MOV  R17,R26
0000d6 b3e5      	IN   R30,0x15
0000d7 70ef      	ANDI R30,LOW(0xF)
0000d8 2fae      	MOV  R26,R30
0000d9 2fe1      	MOV  R30,R17
0000da 7fe0      	ANDI R30,LOW(0xF0)
0000db 2bea      	OR   R30,R26
0000dc bbe5      	OUT  0x15,R30
0000dd d080      	RCALL SUBOPT_0x2
0000de 9aaa      	SBI  0x15,2
0000df d07e      	RCALL SUBOPT_0x2
0000e0 98aa      	CBI  0x15,2
0000e1 d07c      	RCALL SUBOPT_0x2
0000e2 c072      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000e3 93aa      	ST   -Y,R26
0000e4 81a8      	LD   R26,Y
0000e5 dfee      	RCALL __lcd_write_nibble_G100
0000e6 81e8          ld    r30,y
0000e7 95e2          swap  r30
0000e8 83e8          st    y,r30
0000e9 81a8      	LD   R26,Y
0000ea dfe9      	RCALL __lcd_write_nibble_G100
                +
0000eb e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000ec 958a     +DEC R24
0000ed f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000ee 9621      	ADIW R28,1
0000ef 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000f0 d07e      	RCALL __SAVELOCR2
0000f1 2f1a      	MOV  R17,R26
0000f2 810a      	LDD  R16,Y+2
0000f3 2fe1      	MOV  R30,R17
0000f4 e0f0      	LDI  R31,0
0000f5 52e0      	SUBI R30,LOW(-__base_y_G100)
0000f6 4fff      	SBCI R31,HIGH(-__base_y_G100)
0000f7 81e0      	LD   R30,Z
0000f8 0fe0      	ADD  R30,R16
0000f9 2fae      	MOV  R26,R30
0000fa dfe8      	RCALL __lcd_write_data
0000fb 2e50      	MOV  R5,R16
0000fc 2e41      	MOV  R4,R17
0000fd d076      	RCALL __LOADLOCR2
0000fe 9623      	ADIW R28,3
0000ff 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000100 e0a2      	LDI  R26,LOW(2)
000101 d060      	RCALL SUBOPT_0x3
000102 e0ac      	LDI  R26,LOW(12)
000103 dfdf      	RCALL __lcd_write_data
000104 e0a1      	LDI  R26,LOW(1)
000105 d05c      	RCALL SUBOPT_0x3
000106 e0e0      	LDI  R30,LOW(0)
000107 2e4e      	MOV  R4,R30
000108 2e5e      	MOV  R5,R30
000109 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00010a 931a      	ST   -Y,R17
00010b 2f1a      	MOV  R17,R26
00010c 301a      	CPI  R17,10
00010d f011      	BREQ _0x2000005
00010e 1457      	CP   R5,R7
00010f f038      	BRLO _0x2000004
                 _0x2000005:
000110 e0e0      	LDI  R30,LOW(0)
000111 93ea      	ST   -Y,R30
000112 9443      	INC  R4
000113 2da4      	MOV  R26,R4
000114 dfdb      	RCALL _lcd_gotoxy
000115 301a      	CPI  R17,10
000116 f1f1      	BREQ _0x2080001
                 _0x2000004:
000117 9453      	INC  R5
000118 9aa8      	SBI  0x15,0
000119 2fa1      	MOV  R26,R17
00011a dfc8      	RCALL __lcd_write_data
00011b 98a8      	CBI  0x15,0
00011c c038      	RJMP _0x2080001
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
00011d d04f      	RCALL __SAVELOCR4
00011e 019d      	MOVW R18,R26
                 _0x200000B:
00011f 01f9      	MOVW R30,R18
                +
000120 5f2f     +SUBI R18 , LOW ( - 1 )
000121 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000122 91e4      	LPM  R30,Z
000123 2f1e      	MOV  R17,R30
000124 30e0      	CPI  R30,0
000125 f019      	BREQ _0x200000D
000126 2fa1      	MOV  R26,R17
000127 dfe2      	RCALL _lcd_putchar
000128 cff6      	RJMP _0x200000B
                 _0x200000D:
000129 d048      	RCALL __LOADLOCR4
00012a 9624      	ADIW R28,4
00012b 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00012c 931a      	ST   -Y,R17
00012d 2f1a      	MOV  R17,R26
00012e b3e4      	IN   R30,0x14
00012f 6fe0      	ORI  R30,LOW(0xF0)
000130 bbe4      	OUT  0x14,R30
000131 9aa2      	SBI  0x14,2
000132 9aa0      	SBI  0x14,0
000133 9aa1      	SBI  0x14,1
000134 98aa      	CBI  0x15,2
000135 98a8      	CBI  0x15,0
000136 98a9      	CBI  0x15,1
000137 2e71      	MOV  R7,R17
000138 2fe1      	MOV  R30,R17
000139 58e0      	SUBI R30,-LOW(128)
                +
00013a 93e0 00e2+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00013c 2fe1      	MOV  R30,R17
00013d 54e0      	SUBI R30,-LOW(192)
                +
00013e 93e0 00e3+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000140 e1a4      	LDI  R26,LOW(20)
000141 e0b0      	LDI  R27,0
000142 d034      	RCALL _delay_ms
000143 d022      	RCALL SUBOPT_0x4
000144 d021      	RCALL SUBOPT_0x4
000145 d020      	RCALL SUBOPT_0x4
000146 e2a0      	LDI  R26,LOW(32)
000147 df8c      	RCALL __lcd_write_nibble_G100
                +
000148 ec88     +LDI R24 , LOW ( 200 )
000149 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00014a 9701     +SBIW R24 , 1
00014b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00014c e2a8      	LDI  R26,LOW(40)
00014d df95      	RCALL __lcd_write_data
00014e e0a4      	LDI  R26,LOW(4)
00014f df93      	RCALL __lcd_write_data
000150 e8a5      	LDI  R26,LOW(133)
000151 df91      	RCALL __lcd_write_data
000152 e0a6      	LDI  R26,LOW(6)
000153 df8f      	RCALL __lcd_write_data
000154 dfab      	RCALL _lcd_clear
                 _0x2080001:
000155 9119      	LD   R17,Y+
000156 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
0000e0           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x0:
000157 e0ef      	LDI  R30,LOW(15)
000158 93ea      	ST   -Y,R30
000159 e0a1      	LDI  R26,LOW(1)
00015a cf95      	RJMP _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1:
00015b e1ae      	LDI  R26,LOW(30)
00015c e0b0      	LDI  R27,0
00015d c019      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2:
                +
00015e e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00015f 958a     +DEC R24
000160 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000161 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000162 df80      	RCALL __lcd_write_data
000163 e0a3      	LDI  R26,LOW(3)
000164 e0b0      	LDI  R27,0
000165 c011      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x4:
000166 e3a0      	LDI  R26,LOW(48)
000167 df6c      	RCALL __lcd_write_nibble_G100
                +
000168 ec88     +LDI R24 , LOW ( 200 )
000169 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00016a 9701     +SBIW R24 , 1
00016b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00016c 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR4:
00016d 933a      	ST   -Y,R19
                 __SAVELOCR3:
00016e 932a      	ST   -Y,R18
                 __SAVELOCR2:
00016f 931a      	ST   -Y,R17
000170 930a      	ST   -Y,R16
000171 9508      	RET
                 
                 __LOADLOCR4:
000172 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000173 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000174 8119      	LDD  R17,Y+1
000175 8108      	LD   R16,Y
000176 9508      	RET
                 
                 _delay_ms:
000177 9610      	adiw r26,0
000178 f039      	breq __delay_ms1
                 __delay_ms0:
000179 95a8      	wdr
                +
00017a ed80     +LDI R24 , LOW ( 0x7D0 )
00017b e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00017c 9701     +SBIW R24 , 1
00017d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00017e 9711      	sbiw r26,1
00017f f7c9      	brne __delay_ms0
                 __delay_ms1:
000180 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8535 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   5 r17:  21 r18:   5 r19:   3 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  17 r25:   5 r26:  49 r27:  21 r28:   4 r29:   1 r30:  63 r31:   5 
x  :   3 y  :  20 z  :   9 
Registers used: 21 out of 35 (60.0%)

ATmega8535 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   4 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   5 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :   9 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :   5 
cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   2 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   1 
cpc   :   0 cpi   :   3 cpse  :   0 dec   :   3 des   :   0 eor   :   0 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   2 
inc   :   2 ld    :   6 ldd   :   4 ldi   :  80 lds   :   0 lpm   :   9 
lsl   :   0 lsr   :   0 mov   :  19 movw  :   5 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   1 ori   :   1 out   :  15 
pop   :   0 push  :   0 rcall :  65 ret   :  10 reti  :   0 rjmp  :  47 
rol   :   0 ror   :   0 sbc   :   0 sbci  :   2 sbi   :   5 sbic  :  16 
sbis  :   0 sbiw  :   7 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  14 std   :   0 
sts   :   2 sub   :   0 subi  :   4 swap  :   1 tst   :   0 wdr   :   1 

Instructions used: 35 out of 114 (30.7%)

ATmega8535 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000302    712     58    770    8192   9.4%
[.dseg] 0x000060 0x0000e4      0      4      4     512   0.8%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
